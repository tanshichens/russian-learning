═══════════════════════════════════════════════════════════════
  Railway 部署详细步骤 - 跟着做就能成功
═══════════════════════════════════════════════════════════════

✅ 第1步已完成：代码已提交到本地Git

现在继续：

═══════════════════════════════════════════════════════════════
第2步：在GitHub创建仓库（2分钟）
═══════════════════════════════════════════════════════════════

1. 打开浏览器，访问：https://github.com/new

2. 填写信息：
   Repository name: russian-learning
   Description: 俄语学习网站
   选择：Private（私有仓库）
   
3. ⚠️ 重要：不要勾选任何初始化选项！
   - ❌ 不要勾选 "Add a README file"
   - ❌ 不要选择 .gitignore
   - ❌ 不要选择 license
   
4. 点击 "Create repository"

5. 你会看到一个页面，上面有一些命令
   复制类似这样的地址：
   https://github.com/你的用户名/russian-learning.git
   
═══════════════════════════════════════════════════════════════
第3步：推送代码到GitHub（1分钟）
═══════════════════════════════════════════════════════════════

回到PowerShell，执行以下命令：

⚠️ 把下面的"你的用户名"替换成你的GitHub用户名！

命令1：
git remote add origin https://github.com/你的用户名/russian-learning.git

命令2：
git branch -M main

命令3：
git push -u origin main

执行后：
- 如果提示登录GitHub，按提示登录
- 等待上传完成（可能需要几分钟，文件比较多）
- 看到"done"表示成功！

═══════════════════════════════════════════════════════════════
第4步：部署后端到Railway（3分钟）
═══════════════════════════════════════════════════════════════

4.1 访问Railway：
   打开：https://railway.app/new

4.2 登录：
   - 点击 "Login with GitHub"
   - 授权Railway访问GitHub
   
4.3 创建项目：
   - 点击 "Deploy from GitHub repo"
   - 找到并选择 "russian-learning"
   - 点击 "Deploy Now"
   
4.4 配置后端服务：
   Railway会自动开始部署，但我们需要配置：
   
   a) 点击你的服务（会显示项目名）
   
   b) 点击 "Settings" 标签
   
   c) 找到 "Root Directory"
      - 点击编辑
      - 输入：backend
      - 点击✓保存
   
   d) 找到 "Variables" 标签
      - 点击 "New Variable"
      - Name: NODE_ENV
      - Value: production
      - 点击 "Add"
   
   e) 回到 "Settings"
      - 找到 "Networking" 部分
      - 点击 "Generate Domain"
      - 会生成类似：xxx-backend-production.up.railway.app
      - ⭐ 复制这个域名！记下来！
   
4.5 等待部署：
   - 点击 "Deployments" 查看进度
   - 等待状态变成 ✓ SUCCESS
   - 大约需要1-2分钟

═══════════════════════════════════════════════════════════════
第5步：测试后端（30秒）
═══════════════════════════════════════════════════════════════

在浏览器访问：
https://你的后端域名.up.railway.app/api/health

应该看到：
{
  "status": "ok",
  "message": "俄语学习网站API运行中"
}

✅ 看到了？太好了！后端部署成功！

❌ 看不到？检查：
   - 域名是否正确
   - 是否加了 /api/health
   - 等待几分钟再试

═══════════════════════════════════════════════════════════════
第6步：部署前端到Railway（3分钟）
═══════════════════════════════════════════════════════════════

6.1 在同一个Railway项目中：
   - 点击项目名称返回主页
   - 点击 "+ New"
   - 选择 "GitHub Repo"
   - 再次选择 "russian-learning"
   
6.2 配置前端环境变量：
   ⚠️ 这一步很重要！
   
   a) 点击新创建的服务
   b) 点击 "Variables" 标签
   c) 点击 "New Variable"
   d) 输入：
      Name: VITE_API_URL
      Value: https://你的后端域名.up.railway.app/api
      ⚠️ 把"你的后端域名"替换成第4步记下的域名！
      ⚠️ 最后要加 /api
   e) 点击 "Add"
   
6.3 配置构建命令：
   a) 点击 "Settings"
   
   b) 找到 "Build Command"
      - 点击编辑
      - 输入：npm install && npm run build
      - 点击✓保存
   
   c) 找到 "Start Command"
      - 点击编辑  
      - 输入：npx serve dist -s -p $PORT
      - 点击✓保存
   
6.4 生成前端域名：
   a) 在 "Settings" 中找到 "Networking"
   b) 点击 "Generate Domain"
   c) 会得到：xxx.up.railway.app
   d) ⭐ 这就是你的网站地址！
   
6.5 等待部署：
   - 点击 "Deployments"
   - 等待 ✓ SUCCESS
   - 需要2-3分钟

═══════════════════════════════════════════════════════════════
第7步：测试网站（1分钟）
═══════════════════════════════════════════════════════════════

在浏览器访问你的前端域名：
https://你的前端域名.up.railway.app

应该能看到：
✅ 网站正常显示
✅ 能访问首页
✅ 能进入单词库
✅ 能点击"申请账号"

测试注册功能：
1. 点击导航栏的"单词库"
2. 会跳转到登录页
3. 点击底部紫色卡片"立即申请"
4. 填写：testuser / test123
5. 点击提交

然后：
6. 用 admin / admin000 登录
7. 点击"用户管理"
8. ✅ 应该能看到testuser的申请！

═══════════════════════════════════════════════════════════════
🎉 完成！你的网站已经部署成功！
═══════════════════════════════════════════════════════════════

你的网站地址：https://你的前端域名.up.railway.app

现在：
✅ 全球任何人都能访问
✅ 用户可以申请账号
✅ 你在任何设备都能审批
✅ 24小时在线
✅ 自动HTTPS加密

═══════════════════════════════════════════════════════════════
📝 记录你的地址
═══════════════════════════════════════════════════════════════

前端网站：___________________________________________

后端API：___________________________________________

管理员账号：admin / admin000

═══════════════════════════════════════════════════════════════
🔄 如何更新网站
═══════════════════════════════════════════════════════════════

以后修改代码后：

git add .
git commit -m "更新说明"
git push

Railway会自动重新部署！

═══════════════════════════════════════════════════════════════
❓ 遇到问题？
═══════════════════════════════════════════════════════════════

1. 前端能访问，但API不通？
   → 检查前端的 VITE_API_URL 环境变量是否正确

2. 部署失败？
   → 查看 Railway 的 Deployments 日志
   → 看看具体是什么错误

3. 网站显示404？
   → 检查域名是否正确生成
   → 等待几分钟再试

4. 用户注册失败？
   → 检查后端是否运行（访问 /api/health）
   → 检查浏览器控制台错误

需要帮助就告诉我！

